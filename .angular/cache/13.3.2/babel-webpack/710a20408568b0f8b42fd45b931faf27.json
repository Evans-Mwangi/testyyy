{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Quote } from '../quote';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\n\nfunction QuoteFormComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \"Quote created successfully. Scroll up to view the quote\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let QuoteFormComponent = /*#__PURE__*/(() => {\n  class QuoteFormComponent {\n    constructor() {\n      this.newQuote = new Quote(0, \"\", \"\", \"\", new Date()); //event emitter\n\n      this.addQuote = new EventEmitter(); //displaySuccessMessage\n\n      this.displaySuccessMessage = false;\n    }\n\n    onSubmit() {\n      this.displaySuccessMessage = true; //create a new quote\n\n      this.addQuote.emit(this.newQuote);\n    }\n\n    ngOnInit() {}\n\n  }\n\n  QuoteFormComponent.ɵfac = function QuoteFormComponent_Factory(t) {\n    return new (t || QuoteFormComponent)();\n  };\n\n  QuoteFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuoteFormComponent,\n    selectors: [[\"app-quote-form\"]],\n    outputs: {\n      addQuote: \"addQuote\"\n    },\n    decls: 29,\n    vars: 7,\n    consts: [[1, \"container-fluid\"], [1, \"form-heading\"], [\"class\", \"alert alert-success\", \"role\", \"alert\", 4, \"ngIf\"], [\"id\", \"createQuote\", 3, \"ngSubmit\"], [\"quoteForm\", \"ngForm\"], [1, \"form-group\"], [\"type\", \"text\", \"required\", \"\", \"id\", \"author\", \"name\", \"author\", \"placeholder\", \" Enter author..\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"author\", \"ngModel\"], [1, \"alert\", \"alert-danger\", 3, \"hidden\"], [\"for\", \"createdBy\"], [\"type\", \"text\", \"required\", \"\", \"id\", \"createdBy\", \"name\", \"createdBy\", \"placeholder\", \"Created By..\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"createdBy\", \"ngModel\"], [\"for\", \"quote\"], [\"id\", \"quote\", \"rows\", \"6\", \"name\", \"statement\", \"placeholder\", \"Enter quote..\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"statement\", \"ngModel\"], [\"type\", \"submit\", \"id\", \"form-button\", 1, \"btn\", \"btn-warning\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\"]],\n    template: function QuoteFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\", 1);\n        i0.ɵɵtext(2, \"Create a Quote\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, QuoteFormComponent_div_3_Template, 2, 0, \"div\", 2);\n        i0.ɵɵelementStart(4, \"form\", 3, 4);\n        i0.ɵɵlistener(\"ngSubmit\", function QuoteFormComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"input\", 6, 7);\n        i0.ɵɵlistener(\"ngModelChange\", function QuoteFormComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.newQuote.author = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"p\");\n        i0.ɵɵtext(11, \"Author Required!\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 5);\n        i0.ɵɵelement(13, \"label\", 9);\n        i0.ɵɵelementStart(14, \"input\", 10, 11);\n        i0.ɵɵlistener(\"ngModelChange\", function QuoteFormComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.newQuote.createdBy = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 8)(17, \"p\");\n        i0.ɵɵtext(18, \"Required Field!\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 5);\n        i0.ɵɵelement(20, \"label\", 12);\n        i0.ɵɵelementStart(21, \"textarea\", 13, 14);\n        i0.ɵɵlistener(\"ngModelChange\", function QuoteFormComponent_Template_textarea_ngModelChange_21_listener($event) {\n          return ctx.newQuote.statement = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 8)(24, \"p\");\n        i0.ɵɵtext(25, \"Fill in the Quote!\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(26, \"br\");\n        i0.ɵɵelementStart(27, \"button\", 15);\n        i0.ɵɵtext(28, \"Add\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(8);\n\n        const _r3 = i0.ɵɵreference(15);\n\n        const _r4 = i0.ɵɵreference(22);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.displaySuccessMessage);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newQuote.author);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", _r2.valid || _r2.pristine);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.newQuote.createdBy);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", _r3.valid || _r3.pristine);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.newQuote.statement);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", _r4.valid || _r4.pristine);\n      }\n    },\n    directives: [i1.NgIf, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm, i2.DefaultValueAccessor, i2.RequiredValidator, i2.NgControlStatus, i2.NgModel],\n    styles: [\".form-heading[_ngcontent-%COMP%]{color:#fff;font-family:Poppins;font-size:40px;text-align:center}\"]\n  });\n  return QuoteFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}